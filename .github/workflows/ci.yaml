name: ci

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
  release:
    types:
      - created
permissions: read-all

env:
  DIZBOX_NAMESPACE_NAME: bzkf-dizbox

jobs:
  build-decompose-xml-image:
    name: build decompose-xmls container image
    uses: miracum/.github/.github/workflows/standard-build.yaml@af38234ff7a38994a6e414ba2f13a1576eed54c0 # v1.4.1
    permissions:
      contents: read
      id-token: write
      packages: write
      pull-requests: write
      actions: read
      security-events: write
    with:
      image: ghcr.io/${{ github.repository }}/decompose-xmls
      build-context: src/decompose_xmls
      enable-build-test-layer: false
    secrets:
      github-token: ${{ secrets.GITHUB_TOKEN }}

  build-obds-fhir-to-opal-image:
    name: build obds-fhir-to-opal container image
    uses: miracum/.github/.github/workflows/standard-build.yaml@af38234ff7a38994a6e414ba2f13a1576eed54c0 # v1.4.1
    permissions:
      contents: read
      id-token: write
      packages: write
      pull-requests: write
      actions: read
      security-events: write
    with:
      image: ghcr.io/${{ github.repository }}/obds-fhir-to-opal
      build-context: src/obds_fhir_to_opal
      enable-build-test-layer: false
    secrets:
      github-token: ${{ secrets.GITHUB_TOKEN }}

  lint:
    uses: miracum/.github/.github/workflows/standard-lint.yaml@af38234ff7a38994a6e414ba2f13a1576eed54c0 # v1.4.1
    permissions:
      contents: read
      pull-requests: write
      issues: write
      security-events: write
      actions: read
    with:
      enable-validate-gradle-wrapper: false
      codeql-languages: '["python"]'
      enable-codeql: false
      enable-verify-base-image-signature: false
    secrets:
      github-token: ${{ secrets.GITHUB_TOKEN }}

  test-k8s:
    runs-on: ubuntu-22.04
    # disabled since the major deployment platform is currently
    # docker compose anyways
    if: ${{ false }}
    # run tests only on PRs
    # ${{ github.event_name == 'pull_request' }}
    needs:
      - build-decompose-xml-image
      - build-obds-fhir-to-opal-image
    steps:
      - name: install k3s
        run: |
          curl -sfL https://get.k3s.io | INSTALL_K3S_VERSION=v1.28.3+k3s2 sh -

      - name: setup .kube/config
        run: |
          mkdir ~/.kube
          sudo k3s kubectl config view --raw | tee ~/.kube/config > /dev/null
          chmod 600 ~/.kube/config

      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: install dependencies
        run: |
          kubectl get node

          # via <https://stackoverflow.com/a/65411733>
          kubectl create namespace "${DIZBOX_NAMESPACE_NAME}" --dry-run=client -o yaml | kubectl apply -f -
          kubectl config set-context --current --namespace="${DIZBOX_NAMESPACE_NAME}"

          kubectl config view

          helm dependency build charts/prerequisites
          helm upgrade --install --wait --timeout=10m --set strimzi-kafka-operator.generateNetworkPolicy=false diz-in-a-box-prerequisites charts/prerequisites

          kubectl apply -f k8s/
          kubectl wait kafka/bzkf-dizbox-cluster --for=condition=Ready --timeout=600s

          kubectl apply -f k8s/kafka-bridge.yaml
          kubectl wait kafkabridge/bzkf-dizbox-bridge --for=condition=Ready --timeout=600s

          kubectl get all -A

      - name: install diz-in-a-box
        run: |
          helm repo add miracum https://miracum.github.io/charts
          helm repo add akhq https://akhq.io/
          helm repo add hapi-fhir-jpaserver-starter https://hapifhir.github.io/hapi-fhir-jpaserver-starter

          helm dependency build charts/diz-in-a-box
          helm upgrade --install --wait --timeout=10m diz-in-a-box charts/diz-in-a-box

          kubectl get all -A

      - name: test deployments
        run: |
          helm test diz-in-a-box

          kubectl wait deployment/diz-in-a-box-stream-processors-obds-to-fhir --for=condition=Available --timeout=300s
          kubectl wait deployment/diz-in-a-box-stream-processors-fhir-to-server --for=condition=Available --timeout=300s

      - name: Print cluster logs
        if: always()
        run: |
          kubectl cluster-info dump -o yaml | tee kind-cluster-dump.txt

      - name: Upload cluster dump
        if: always()
        uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32 # v3.1.3
        with:
          name: kind-cluster-dump.txt
          path: |
            kind-cluster-dump.txt

  build-air-gapped-installer:
    runs-on: ubuntu-22.04
    if: ${{ github.event_name == 'pull_request' }}
    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - run: |
          ./build-air-gapped-installer.sh

  release:
    if: ${{ startsWith(github.ref, 'refs/tags/') }}
    permissions:
      actions: read
      contents: write
      id-token: write
      packages: write
    needs:
      - build-decompose-xml-image
      - build-obds-fhir-to-opal-image
    uses: ./.github/workflows/release.yaml
