services:
  traefik:
    image: docker.io/library/traefik:v2.10.1
    restart: unless-stopped
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    cap_drop:
      - ALL
    read_only: true
    profiles:
      - traefik
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    deploy:
      resources:
        limits:
          memory: 512m

  fhir-server:
    image: docker.io/hapiproject/hapi:v6.4.4
    restart: unless-stopped
    cap_drop:
      - ALL
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    deploy:
      resources:
        limits:
          memory: 4096m
    read_only: true
    tmpfs:
      - /tmp
      - /app/target
    privileged: false
    environment:
      SPRING_DATASOURCE_URL: "jdbc:postgresql://fhir-db:5432/fhir?currentSchema=public"
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_DATASOURCE_DRIVERCLASSNAME: org.postgresql.Driver
      spring.jpa.properties.hibernate.dialect: ca.uhn.fhir.jpa.model.dialect.HapiFhirPostgres94Dialect
      HAPI_FHIR_VALIDATION_REQUESTS_ENABLED: "false"
      HAPI_FHIR_USE_APACHE_ADDRESS_STRATEGY: "true"
      HAPI_FHIR_ENFORCE_REFERENTIAL_INTEGRITY_ON_DELETE: "false"
      HAPI_FHIR_ENFORCE_REFERENTIAL_INTEGRITY_ON_WRITE: "false"
      HAPI_FHIR_SUBSCRIPTION_RESTHOOK_ENABLED: "false"
      HAPI_FHIR_ALLOW_MULTIPLE_DELETE: "true"
    depends_on:
      - fhir-db
    ports:
      - "8082:8080"
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.fhir.loadbalancer.server.port=8080"
      - "traefik.http.routers.fhir.rule=Host(`fhir-server.127.0.0.1.nip.io`)"
      - "traefik.http.routers.fhir.entrypoints=web"

  fhir-db:
    image: docker.io/library/postgres:15.3
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 1024m
    ipc: private
    security_opt:
      - "no-new-privileges:true"
    privileged: false
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: fhir
    volumes:
      - "fhir_db_data:/var/lib/postgresql/data:rw"

  fhir-gateway:
    image: ghcr.io/miracum/fhir-gateway:v3.10.9
    restart: unless-stopped
    cap_drop:
      - ALL
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    read_only: true
    tmpfs:
      - /tmp
    privileged: false
    environment:
      SERVICES_PSQL_ENABLED: "false"
      SPRING_SQL_INIT_MODE: "never"
      # TODO: re-enable!
      SERVICES_PSEUDONYMIZER_ENABLED: "false"
      SERVICES_PSEUDONYMIZER_URL: "http://fhir-pseudonymizer:8080/fhir"
      SERVICES_LOINC_CONVERSIONS_ENABLED: "false"
      SERVICES_LOINC_CONVERSIONS_URL: ""
      SERVICES_FHIRSERVER_ENABLED: "false"
      MANAGEMENT_ENDPOINT_HEALTH_PROBES_ADD_ADDITIONAL_PATHS: "true"
      MANAGEMENT_SERVER_PORT: "8081"
      OPENTRACING_JAEGER_ENABLED: "false"
      JAEGER_SERVICE_NAME: "fhir-gateway"
      SERVICES_KAFKA_ENABLED: "true"
      INPUT_TOPIC: "fhir.onkoadt.MedicationStatement,fhir.onkoadt.Condition,fhir.onkoadt.Observation,fhir.onkoadt.Procedure,fhir.onkoadt.Patient"
      OUTPUT_TOPIC: "fhir.post-gateway"
      BOOTSTRAP_SERVERS: "kafka:9092"
      SECURITY_PROTOCOL: "PLAINTEXT"
      SERVICES_KAFKA_GENERATE_OUTPUT_TOPIC_MATCH_EXPRESSION: "^fhir\\."
      SERVICES_KAFKA_GENERATE_OUTPUT_TOPIC_REPLACE_WITH: "fhir.pseudonymized."

  fhir-pseudonymizer:
    image: ghcr.io/miracum/fhir-pseudonymizer:v2.17.0
    restart: unless-stopped
    cap_drop:
      - ALL
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    read_only: true
    privileged: false
    environment:
      COMPlus_EnableDiagnostics: "0"
      PseudonymizationService: "gPAS"
      AnonymizationEngineConfigPath: "/etc/fhir-pseudonymizer/anonymization.yaml"
      gPAS__Url: ""
      gPAS__Auth__Basic__Username: ""
      gPAS__Auth__Basic__Password: ""
      gPAS__Version: "1.10.3"
    volumes:
      - ./anonymization.yaml:/etc/fhir-pseudonymizer/anonymization.yaml:ro

  kafka:
    image: docker.io/bitnami/kafka:3.4.0
    restart: unless-stopped
    cap_drop:
      - ALL
    privileged: false
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    environment:
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_CFG_MESSAGE_MAX_BYTES: "31457280"
    volumes:
      - "kafka_data:/bitnami:rw"

  kafka-connect:
    image: docker.io/cricketeerone/apache-kafka-connect:3.4.0
    restart: unless-stopped
    cap_drop:
      - ALL
    privileged: false
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    profiles:
      - kafka-connect
    environment:
      CONNECT_BOOTSTRAP_SERVERS: kafka:9092
      CONNECT_GROUP_ID: kafka-connect-group
      CONNECT_KEY_CONVERTER: "org.apache.kafka.connect.storage.StringConverter"
      CONNECT_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "kafka-connect"
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: "1"
      CONNECT_CONFIG_STORAGE_TOPIC: __kafka-connect-config
      CONNECT_OFFSET_STORAGE_TOPIC: __kafka-connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: __kafka-connect-status
      CONNECT_PLUGIN_PATH: /app/libs
    volumes:
      - ./kafka-connect-passwords.properties:/tmp/kafka-connect-passwords.properties:ro

  akhq:
    image: docker.io/tchiotludo/akhq:0.24.0
    restart: unless-stopped
    cap_drop:
      - ALL
    privileged: false
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    environment:
      AKHQ_CONFIGURATION: |
        akhq:
          connections:
            kafka:
              properties:
                bootstrap.servers: "kafka:9092"
              connect:
                - name: "kafka-connect"
                  url: "http://kafka-connect:8083"

    ports:
      - "8084:8080"
    depends_on:
      - kafka
    labels:
      - "traefik.enable=true"
      - "traefik.http.services.akhq.loadbalancer.server.port=8080"
      - "traefik.http.routers.akhq.rule=Host(`akhq.127.0.0.1.nip.io`)"
      - "traefik.http.routers.akhq.entrypoints=web"

  fhir-to-server:
    image: ghcr.io/miracum/kafka-fhir-to-server:v1.2.3
    restart: unless-stopped
    cap_drop:
      - ALL
    privileged: false
    ipc: none
    security_opt:
      - "no-new-privileges:true"
    environment:
      SECURITY_PROTOCOL: PLAINTEXT
      BOOTSTRAP_SERVERS: kafka:9092
      JAVA_TOOL_OPTIONS: "-XX:MaxRAMPercentage=75"
      FHIR_URL: http://fhir-server:8080/fhir
      TOPIC: fhir.pseudonymized.onkoadt.MedicationStatement,fhir.pseudonymized.onkoadt.Condition,fhir.pseudonymized.onkoadt.Observation,fhir.pseudonymized.onkoadt.Procedure,fhir.pseudonymized.onkoadt.Patient

volumes:
  fhir_db_data:
    driver: local
  kafka_data:
    driver: local
